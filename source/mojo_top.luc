module mojo_top (
    input clk,              // 50MHz clock
    input rst_n,            // reset button (active low)
    output io_led[5],         // 2 user controllable LEDs
    input cclk,             // configuration clock, AVR ready when high
    output spi_miso,        // AVR SPI MISO
    input spi_ss,           // AVR SPI Slave Select
    input spi_mosi,         // AVR SPI MOSI
    input spi_sck,          // AVR SPI Clock
    output spi_channel [4], // AVR general purpose pins (used by default to select ADC channel)
    input avr_tx,           // AVR TX (FPGA RX)
    output avr_rx,          // AVR RX (FPGA TX)
    input avr_rx_busy,       // AVR RX buffer full
    output a,
    output b,
    output c,
    input sum,
    input carry,
    input io_dip[3]
    
  ) {
  
  sig rst;                  // reset signal
  
  .clk(clk) {
    // The reset conditioner is used to synchronize the reset signal to the FPGA
    // clock. This ensures the entire FPGA comes out of reset at the same time.
    reset_conditioner reset_cond;
  }
  
  always {
    reset_cond.in = ~rst_n; // input raw inverted reset signal
    rst = reset_cond.out;   // conditioned reset
                    // turn LEDs off
    spi_miso = bz;          // not using SPI
    spi_channel = bzzzz;    // not using flags
    avr_rx = bz;            // not using serial         n1};    
    
    io_led[0] = io_dip[0];
    io_led[1] = io_dip[1];
    io_led[2] = io_dip[2];
    
    a = io_dip[0];
    b = io_dip[1];
    c = io_dip[2];
    
    io_led[3] = sum;
    io_led[4] = carry;
  }
}